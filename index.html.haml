---
layout: base
---

%h1
  Togglz

%h2
  What is it about?

%p
  Togglz is an implementation of the <a href="http://martinfowler.com/bliki/FeatureToggle.html">Feature Toggles</a> pattern for Java.
  Feature Toggles are a very common agile development practices in the context of continuous deployment and delivery.
  The basic idea is to associate a toggle with each new feature you are working on. This allows you to enable or disable these
  features at application runtime, even for individual users.

%p
  Want to learn more? Have a look at an <a href="#example">usage example</a> or check the
  <a href="quickstart.html">quickstart guide</a>.

%h2
  News

.news

  .entry
    .date
      23-Dec-2018
    .heading
      Togglz is looking for a new maintainer
    .content
      The Togglz project is currently looking for a new maintainer.
      See <a href="https://groups.google.com/forum/#!topic/togglz-dev/4eL0tAO3q-A">this post</a> for details.
      Please note that for this reason there is currently no active development happening.
      So don't expect any new releases in the near future.

  .entry
    .date
      30-Jun-2018
    .heading
      Togglz 2.6.0.Final released
    .content
      We are very proud to announce the release of Togglz 2.6.0.Final. The most noteworthy
      feature of this version is support for Spring Boot 2.0. Many thanks to 
      <a href="https://github.com/ruifigueira">Rui Figueira</a> for helping with this.
      Spring Boot users should definitely have a look at the <a href="/updating-notes.html">updating notes</a> 
      page. A fully summary of all changes can be found on the <a href="/whats-new.html">what's new</a> page.
      Enjoy!

  .entry
    .date
      29-Oct-2017
    .heading
      Togglz 2.5.0.Final released
    .content
      I'm very happy to announce the release of Togglz 2.5.0.Final. This
      release includes many new features contributed by our great community.
      As always you can learn more on our <a href="/whats-new.html">what's new</a> 
      page!

  .entry
    .date
      08-Mar-2017
    .heading
      Togglz 2.4.1.Final released
    .content
      We released Togglz 2.4.1.Final today. This version fixes two bugs
      that were introduced in the 2.4.0.Final release. If you want to learn more,
      have a look at the  <a href="/whats-new.html">what's new</a> page!

  .entry
    .date
      22-Feb-2017
    .heading
      Togglz 2.4.0.Final released
    .content
      We are very happy to announce the release of Togglz 2.4.0.Final. This new version adds some new
      modules which have been contributed by the community. See the <a href="/whats-new.html">what's new</a>
      page for all details. Enjoy!

  .entry
    .date
      30-Jul-2016
    .heading
      Togglz 2.3.0.Final released
    .content
      We are very proud to announce the release of Togglz 2.3.0.Final. Thanks to everyone who
      helped to get this release out. You can learn more about the latest changes on the
      <a href="/whats-new.html">what's new</a> page. Also have a look at the
      <a href="/updating-notes.html">updating notes</a> for important changes
      since 2.2.0.Final. Enjoy!

  .entry
    .date
      17-Jun-2016
    .heading
      Togglz 2.3.0.RC2 released
    .content
      We are happy to announce the release of Togglz 2.3.0.RC2. This new version adds some major
      new features which have been contributed by the community. See the <a href="/whats-new.html">what's new</a>
      page for all details. We are planning to release Togglz 2.3.0.Final very soon. So please give
      RC2 a try and report every problem you run into. The simplest way to contact us is to use the
      new <a href="https://gitter.im/togglz/togglz">Gitter chat room</a>. Please let us know what you think!

%a(name="example")
%h2
  Example

%p
  Features are declared using a regular Java enum type:

%pre(class="prettyprint lang-java")
  :escaped
    public enum MyFeatures implements Feature {

        @Label("First Feature")
        FEATURE_ONE,

        @Label("Second Feature")
        FEATURE_TWO;

        public boolean isActive() {
            return FeatureContext.getFeatureManager().isActive(this);
        }

    }

%p
  Checking whether a specific feature is enabled for the current user is very simple. Just call the <code>isActive()</code>
  method on the feature.

%pre(class="prettyprint lang-java")
  :escaped
    public void someBusinessMethod() {

      if( MyFeatures.FEATURE_ONE.isActive() ) {
        // do new exciting stuff here
      }

      [...]

    }

%p
  You can find more details in the <a href="quickstart.html">quickstart guide</a>.
